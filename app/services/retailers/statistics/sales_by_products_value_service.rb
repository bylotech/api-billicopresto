# frozen_string_literal: true

module Retailers
  module Statistics
    # returns the turnover generated by each product
    class SalesByProductsValueService
      def initialize(retailer, **args)
        @retailer = retailer
        @order = args[:order] == "ASC" ? "ASC" : "DESC"
        @limit = args[:limit]
      end

      def call!
        data = Product.joins(:tills)
                      .where(tills: {retailer: @retailer})
                      .group(:id)
                      .order("sum_receipt_lines_amount_excluding_taxes_cents #{@order}")
                      .sum("receipt_lines.amount_excluding_taxes_cents")

        data = data.first(@limit).to_h if @limit

        data
      end
    end
  end
end
